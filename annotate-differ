#!/usr/bin/python

import os
import subprocess
import re
import sys


def get_changed_lines(output):
    lines = output.splitlines()
    try:
        return _get_changed_lines(lines)
    except Exception as e:
        sys.stderr.write('{}'.format(str(e)))
        sys.stderr.flush()
        return {}


def _get_changed_lines(lines):
    r = r'^@@ -(\d+),?(\d+|.*) \+(\d+),?(\d+|.*) @@'
    start_of_chunk = re.compile(r)

    changed_lines = {}

    while lines:
        if not start_of_chunk.search(lines[0]):
            lines.pop(0)
        else:
            break

    while lines:
        orig_start, orig_count, new_start, new_count = start_of_chunk.search(lines.pop(0)).groups()
        orig_start = int(orig_start)
        orig_count = int(orig_count or -1)
        new_start = max(int(new_start), 1)
        new_count = int(new_count or -1)

        del_count = 0

        if orig_count == -1:
            changed_lines[new_start] = 'DifferDel1'
            lines.pop(0)
        else:
            for i in range(orig_start, orig_start+orig_count):
                del_count += 1
                lines.pop(0)

        if new_count == -1:
            if del_count > 0:
                del_count -= 1
                f = 'DifferMod{}'.format(del_count) if del_count < 9 else 'DifferMod'
                changed_lines[new_start] = f
                del_count = 0
            else:
                changed_lines[new_start] = 'DifferAdd'
            lines.pop(0)
        else:
            for i in range(new_start, new_start+new_count):
                if del_count > 0:
                    changed_lines[i] = 'DifferMod'
                    del_count = 0
                else:
                    if i in changed_lines:
                        changed_lines[i] = 'DifferMod'
                    else:
                        changed_lines[i] = 'DifferAdd'
                lines.pop(0)

        if del_count > 0:
            f = 'DifferDel{}'.format(del_count) if del_count < 9 else 'DifferDel'
            changed_lines[new_start] = f

    return changed_lines


def under_hg(path):
    while path != '/':
        path = os.path.dirname(path)
        if os.path.isdir(os.path.join(path, ".hg")):
            return True
    return False


def under_git(path):
    while path != '/':
        path = os.path.dirname(path)
        if os.path.isdir(os.path.join(path, ".git")):
            return True
    return False


def run_diff(path):
    if under_git(path):
        cmd = ['git', 'diff', '-U0', '--color=never', path]
    elif under_hg(path):
        cmd = ['hg', '--color=never', '--config', 'ui.verbose=false', 'diff', '-U0', path]
    else:
        return ''

    try:
        out = subprocess.check_output(cmd, stderr=subprocess.PIPE)
    except subprocess.CalledProcessError as e:
        return e.output.decode()
    else:
        return out.decode()


def format_changes(changes):
    for k, v in sorted(changes.items()):
        print('{}={}'.format(k, v))


format_changes(get_changed_lines(run_diff(os.path.abspath(sys.argv[1]))))
